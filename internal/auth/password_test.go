package auth

import (
	"testing"

	"golang.org/x/crypto/bcrypt"
)

func TestGeneratePasswordHash(t *testing.T) {
	password := "5Qw#FqBFhbaa"

	hash, err := GeneratePasswordHash(password)
	if err != nil {
		t.Error(err.Error())
	}
	if err := bcrypt.CompareHashAndPassword([]byte(hash), []byte(password)); err != nil {
		t.Errorf("Got invalid password hash.")
	}
}

func TestIsValidPassword(t *testing.T) {
	password := "5Qw#FqBFhbaa"
	// cost = 14 generated by https://bcrypt-generator.com/
	hash := "$2y$14$0n5iO5daayyo8U5SPnO.gOSBbOkYFYBxCA9SLUm53Wk32lgAgiFrW"

	if IsValidPassword(password, hash) == false {
		t.Errorf("In case of correct password, it returns false.")
	}

	if IsValidPassword("invalid", hash) {
		t.Errorf("In case of invalid password, it returns true.")
	}
}
